CREATE TABLE Authors (
    author_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    birth_date DATE,
    country VARCHAR(100)
);


CREATE TABLE Books (
    book_id SERIAL PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    author_id INT Not Null REFERENCES authors(author_id) ON DELETE CASCADE ,
    published_year INT,
    isbn VARCHAR(20) UNIQUE NOT NULL
);


CREATE TABLE Borrowers (
    borrower_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE Loans (
    loan_id SERIAL PRIMARY KEY,
    book_id int Not Null REFERENCES books(book_id) ON DELETE CASCADE,
    borrower_id int Not Null REFERENCES  borrowers(borrower_id) ON DELETE CASCADE,
    loan_date DATE NOT NULL DEFAULT CURRENT_DATE,
    return_date DATE,
    returned boolean default false
);




Data Populated:

INSERT INTO Authors (name, birth_date, country) VALUES
('J.K. Rowling', '1965-07-31', 'United Kingdom'),
('George Orwell', '1903-06-25', 'United Kingdom'),
('Mark Twain', '1835-11-30', 'United States'),
('Jane Austen', '1775-12-16', 'United Kingdom'),
('Haruki Murakami', '1949-01-12', 'Japan');


INSERT INTO Books (title, author_id, published_year, isbn) VALUES
('Harry Potter and the Sorcerers Stone', 1, 1997, '9780747532743'),
('1984', 2, 1949, '9780451524935'),
('Animal Farm', 2, 1945, '9780451526342'),
('The Adventures of Tom Sawyer', 3, 1876, '9780486400778'),
('Norwegian Wood', 5, 1987, '9780375704024');


INSERT INTO Borrowers (name, email, phone) VALUES
('Elia Helou', 'elia@gmail.com', '123-456-7890'),
('Charbel AbouKhalil', 'charbel@gmail.com', '234-567-8901'),
('Charlie Davis', 'charlie@example.com', '345-678-9012'),
('Diana Evans', 'diana@example.com', '456-789-0123'),
('Ethan Wilson', 'ethan@example.com', '567-890-1234');

INSERT INTO Loans (book_id, borrower_id, loan_date, return_date, returned) VALUES
(1, 1, '2025-02-05', '2025-02-19', FALSE),  
(2, 2, '2025-02-02', '2025-02-12', FALSE),  
(3, 3, '2025-01-28', '2025-02-07', TRUE),  
(4, 4, '2025-01-23', '2025-02-10', TRUE),  
(5, 5, '2025-02-09', NULL, FALSE);


Queries:
1) SELECT * from books where published_year = 1945
2) SELECT * from loans where returned = false and return_date < current_date;
3) SELECT b.book_id, b.title, l.loan_date, l.return_date, l.returned
	from loans l
	join books b on l.book_id = b.book_id
	where l.borrower_id = 1
4) SELECT count(*) AS total_number_of_books from books;


Views:
create view PupularBooks AS
    SELECT b.book_id, b.title, b.published_year, b.isbn, count(l.loan_id) as total_loans
    from books b
    join  loans l on b.book_id = l.book_id
    group by b.book_id
    order by total_loans ASC;



Stored Procedure:
1) CREATE OR REPLACE FUNCTION borrow_book(p_borrower_id INT, p_book_id INT)
RETURNS VOID AS $$
BEGIN
    INSERT INTO loans (book_id, borrower_id, loan_date, returned)
    VALUES (p_book_id, p_borrower_id, CURRENT_DATE, FALSE);
END;
$$ LANGUAGE plpgsql;


2) CREATE OR REPLACE FUNCTION return_book(p_borrower_id INT, p_book_id INT) 
RETURNS VOID AS $$
BEGIN
    UPDATE Loans
    SET return_date = CURRENT_DATE, returned = TRUE
    WHERE book_id = p_book_id AND borrower_id = p_borrower_id;
END;
$$ LANGUAGE plpgsql;

